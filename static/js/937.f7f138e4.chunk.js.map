{"version":3,"file":"static/js/937.f7f138e4.chunk.js","mappings":"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","sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/contacts/selectors.js","pages/ContactsPage/ContactsPage.js","hooks/useFilter.js","hooks/useContacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\n\nexport function Form({ onData }) {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n\n  const [state, setState] = useState({ ...initialState });\n  const { name, number } = state;\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onData({ ...state });\n    setState({ ...initialState });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          onChange={handleChange}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        type=\"submit\"\n        disabled={!name || !number}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div>\n      {contacts.map(({ id, name, number }) => (\n        <div key={id}>\n          <span>{name}: </span>\n          <span>{number}</span>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </Button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\"Enter contact\"\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleFilter = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  return contacts.items.filter(el =>\n    el.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import React from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { Form } from 'components/Form/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useFilter } from 'hooks/useFilter';\nimport { useContacts } from 'hooks/useContacts';\n\nconst ContactsPage = () => {\n  const [filter, onSetFilter] = useFilter();\n  const [contacts, onAddContact, onDeleteContact] = useContacts();\n\n  const empty = () => contacts.length > 0;\n\n  return (\n    <div>\n      <div>\n        <h2>Phonebook</h2>\n        <Form onData={onAddContact} />\n      </div>\n      \n      <div>\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={onSetFilter} />\n        {empty() ? (\n          <>\n            <ContactList\n              contacts={contacts}\n              onDeleteContact={onDeleteContact}\n            />\n          </>\n        ) : (\n          <div>\n            Phonebook is empty! <br /> Add your contacts.\n          </div>\n        )}\n        <Toaster position=\"top-center\" reverseOrder={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;","import { setFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const useFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return [filter, onSetFilter];\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleFilter } from 'redux/contacts/selectors';\nimport {\n  addContact,\n  fetchContacts,\n  removeContact,\n} from 'redux/contacts/contactsThunk';\nimport { toast } from 'react-hot-toast';\nimport { useEffect } from 'react';\n\nexport const useContacts = () => {\n  const contacts = useSelector(getVisibleFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    const isFindCopyContact = contacts.find(\n      el => el.name.toLocaleLowerCase() === payload.name.toLocaleLowerCase()\n    );\n    if (isFindCopyContact) {\n      toast.error(`${payload.name} is in your Contacts`);\n      return;\n    }\n    dispatch(addContact(payload));\n  };\n\n  const onDeleteContact = payload => {\n    dispatch(removeContact(payload));\n  };\n  return [contacts, onAddContact, onDeleteContact];\n};\n"],"names":["Form","_ref","onData","initialState","name","number","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","prevState","_defineProperty","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","pattern","title","required","placeholder","onChange","Button","variant","size","disabled","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","onChangeFilter","getFilter","filter","getVisibleFilter","_ref3","items","el","toLowerCase","includes","_useFilter","useSelector","dispatch","useDispatch","setFilter","useFilter","_useFilter2","onSetFilter","_useContacts","useEffect","fetchContacts","payload","find","toLocaleLowerCase","toast","concat","addContact","removeContact","useContacts","_useContacts2","onAddContact","length","_Fragment","Toaster","position","reverseOrder"],"sourceRoot":""}